<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fsun.dao.mapper.BusInvSkuMapper" >
  <resultMap id="BaseResultMap" type="com.fsun.domain.model.BusInvSku" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="sku" property="sku" jdbcType="VARCHAR" />
    <result column="shop_id" property="shopId" jdbcType="VARCHAR" />
    <result column="qty" property="qty" jdbcType="DECIMAL" />
    <result column="lock_qty" property="lockQty" jdbcType="DECIMAL" />
    <result column="damaged_qty" property="damagedQty" jdbcType="DECIMAL" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, sku, shop_id, qty, lock_qty, damaged_qty, memo, created_time, updated_time
  </sql>
  
  <sql id="conditions">
  	<where>  	
  		<if test="q != null and q != ''">
  			and (a.sku like '%${q}%' 
  				or b.goods_name like '%${q}%'
  				)
  		</if>
  		
  		<if test="sku != null and sku != ''">
  			and a.sku = #{sku}
  		</if>
  		
  		<if test="shopId != null and shopId != ''">
  			and a.shop_id = #{shopId}
  		</if>
  		
	</where>
  </sql>
  
  <select id="selectList" resultMap="BaseResultMap" 
  	parameterType="com.fsun.domain.entity.BusInvSkuCondition" >    
	SELECT 
		a.id as id, 
		a.sku as sku, 
		a.shop_id as shop_id, 
		a.qty as qty, 
		a.lock_qty as lock_qty, 
		a.damaged_qty as damaged_qty, 
		a.memo as memo,
		a.created_time as created_time,
		a.updated_time as updated_time
    FROM bus_inv_sku a
    Left JOIN bus_bas_sku b on b.sku = a.sku
    	<include refid="conditions" />
  </select>
  
  <select id="selectInvSkuList" resultType="com.fsun.domain.dto.InvSkuDto" 
  	parameterType="com.fsun.domain.entity.BusInvSkuCondition" >    
	SELECT 
	  	bas_sku.sku_id as skuId,
		bas_sku.bar_code as barCode,
		bas_sku.sku as sku,
		bas_sku.parent_sku_id as parentSkuId,
		
		rul_sku.category_code as categoryCode,
		rul_sku.product_type as productType,
		rul_sku.brand_code as brandCode,
		rul_sku.goods_name as goodsName,
		rul_sku.en_name as enName,
		rul_sku.property as property,
		rul_sku.market_price as marketPrice,
		rul_sku.cost_price as costPrice,
		rul_sku.supply_price as supplyPrice,		
	    rul_sku.unit as unit,
 
	  	rul_sku.sale_price as salePrice,
	  	rul_sku.vip_price as vipPrice,
		
		bas_sku.origin_sale_price as originSalePrice,
		bas_sku.assist_id as assistId,
		bas_sku.warning_qty as warningQty,
		inv_sku.qty as qty,
		bas_sku.convert_qty as convertQty,
		bas_sku.convert_unit as convertUnit,	
		bas_sku.is_vip_appoint as isVipAppoint,
		bas_sku.is_channel_appoint as isChannelAppoint
	from bus_rul_sku rul_sku
	LEFT JOIN bus_rul_shop rul_shop on rul_shop.rul_id = rul_sku.rul_id
	LEFT JOIN bus_inv_sku inv_sku on rul_shop.shop_id = inv_sku.shop_id and rul_sku.sku = inv_sku.sku
	LEFT JOIN bus_bas_sku bas_sku on bas_sku.sku = rul_sku.sku
	where inv_sku.qty is not null 
	<if test="shopId != null and shopId != ''">
		and rul_shop.shop_id = #{shopId}
	</if>
	<if test="q != null and q != ''">
		and (inv_sku.sku like '%${q}%' 
			or rul_sku.goods_name like '%${q}%'
			)
	</if>
	<if test="qty != null">
		and inv_sku.qty > #{qty}
	</if>
	<if test="categoryCode != null and categoryCode!=''">
		and rul_sku.category_code = #{categoryCode}
	</if>
	
  </select>
  
  <select id="selectListMap" resultType="java.util.Map" 
  	parameterType="com.fsun.domain.entity.BusInvSkuCondition" >    
	SELECT 
		a.id as id, 
		a.sku as sku, 
		a.shop_id as shop_id, 
		a.qty as qty, 
		a.lock_qty as lock_qty, 
		a.damaged_qty as damaged_qty,
		IFNULL(getTakedInvSkuByShopId(a.shop_id, a.sku), getOrderTakedInvSkuByShopId(a.shop_id, a.sku)) as take_inv_qty,
        (a.qty + a.lock_qty + a.damaged_qty - IFNULL(getTakedInvSkuByShopId(a.shop_id, a.sku), getOrderTakedInvSkuByShopId(a.shop_id, a.sku)))  as vir_inv_qty,
		b.goods_name as goods_name, 	
		b.bar_code as bar_code,
		b.brand_code as brand_code,
		b.category_code as category_code,
		b.property as property,
		b.unit_name as unit_name,
		a.memo as memo,
		(SELECT c.shop_name FROM bus_shop c WHERE c.shop_id = a.shop_id) as shop_name
    FROM bus_inv_sku a 
    Left JOIN bus_bas_sku b on b.sku = a.sku   
    	<include refid="conditions" />
  </select>
  
   <select id="findFooter" resultType="java.util.Map" 
  	parameterType="com.fsun.domain.entity.BusInvSkuCondition" >    
	SELECT 
		sum(a.qty) as qty, 
		sum(a.lock_qty) as lock_qty, 
		sum(a.damaged_qty) as damaged_qty
    FROM bus_inv_sku a 
    Left JOIN bus_bas_sku b on b.sku = a.sku   
    	<include refid="conditions" />
  </select>
  
  <select id="export" resultType="java.util.Map" 
  	parameterType="com.fsun.domain.entity.BusInvSkuCondition" >    
	SELECT 		
		a.sku as sku, 
		b.goods_name as goods_name, 
		(SELECT c.shop_name FROM bus_shop c WHERE c.shop_id = a.shop_id) as shop_name,
		a.qty as qty, 
		a.lock_qty as lock_qty, 
		a.damaged_qty as damaged_qty,			
		b.bar_code as bar_code,
		(select codes.code_name from bus_bas_codes codes where codes.code_code = b.brand_code 
       		and codes.code_type='BrandCode') as brand_name,     		
       	(select codes.code_name from bus_bas_codes codes where codes.code_code = b.category_code 
       		and codes.code_type='CategoryCode') as category_name,
		b.property as property,
		b.unit_name as unit_name,
		a.memo as memo
    FROM bus_inv_sku a 
    Left JOIN bus_bas_sku b on b.sku = a.sku   
    	<include refid="conditions" />
    order by a.sku desc
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bus_inv_sku
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bus_inv_sku
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.fsun.domain.model.BusInvSku" >
    insert into bus_inv_sku (id, sku, shop_id, 
      qty, lock_qty, damaged_qty, 
      memo, created_time, updated_time
      )
    values (#{id,jdbcType=VARCHAR}, #{sku,jdbcType=VARCHAR}, #{shopId,jdbcType=VARCHAR}, 
      #{qty,jdbcType=DECIMAL}, #{lockQty,jdbcType=DECIMAL}, #{damagedQty,jdbcType=DECIMAL}, 
      #{memo,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fsun.domain.model.BusInvSku" >
    insert into bus_inv_sku
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sku != null" >
        sku,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="qty != null" >
        qty,
      </if>
      <if test="lockQty != null" >
        lock_qty,
      </if>
      <if test="damagedQty != null" >
        damaged_qty,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="sku != null" >
        #{sku,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=VARCHAR},
      </if>
      <if test="qty != null" >
        #{qty,jdbcType=DECIMAL},
      </if>
      <if test="lockQty != null" >
        #{lockQty,jdbcType=DECIMAL},
      </if>
      <if test="damagedQty != null" >
        #{damagedQty,jdbcType=DECIMAL},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fsun.domain.model.BusInvSku" >
    update bus_inv_sku
    <set >
      <if test="sku != null" >
        sku = #{sku,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=VARCHAR},
      </if>
      <if test="qty != null" >
        qty = #{qty,jdbcType=DECIMAL},
      </if>
      <if test="lockQty != null" >
        lock_qty = #{lockQty,jdbcType=DECIMAL},
      </if>
      <if test="damagedQty != null" >
        damaged_qty = #{damagedQty,jdbcType=DECIMAL},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fsun.domain.model.BusInvSku" >
    update bus_inv_sku
    set sku = #{sku,jdbcType=VARCHAR},
      shop_id = #{shopId,jdbcType=VARCHAR},
      qty = #{qty,jdbcType=DECIMAL},
      lock_qty = #{lockQty,jdbcType=DECIMAL},
      damaged_qty = #{damagedQty,jdbcType=DECIMAL},
      memo = #{memo,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>